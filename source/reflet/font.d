/** 
 * Copyright: Enalye
 * License: Zlib
 * Authors: Enalye
 */
module reflet.font;

import std.uni: toLower;

/*
Chaque glyphe est encodé sur 64 bits
Par défaut, un glyphe fait 5×11 pixels
Les 8 bits de poids faible servent à paramétrer le glyphe:
- Les 4 premiers bits soustraient de leur valeur la hauteur du glyphe ;
- Les 2 bits suivants soustraient de leur valeur la longueur du glyphe ;
- Les 2 bits suivants décalent d’autant le glyphe vers le bas.

Les 5×11=55 bits suivants (ou moins si la longueur ou largeur a été soustraite)
décrivent l’activation du pixel ou non.
*/
private ulong[256] _font = [
    //Chiffres
    0b01110_10001_10011_10011_10101_11001_11001_10001_01110_00000010, //0
    0b00100_01100_00100_00100_00100_00100_00100_00100_01110_00000010, //1
    0b01110_10001_10001_00001_00010_00100_01000_10000_11111_00000010, //2
    0b01110_10001_00001_00001_00110_00001_00001_10001_01110_00000010, //3
    0b00110_01010_01010_10010_10010_10010_11111_00010_00010_00000010, //4
    0b11111_10000_10000_10000_11110_00001_00001_10001_01110_00000010, //5
    0b01110_10001_10000_10000_11110_10001_10001_10001_01110_00000010, //6
    0b11111_00001_00001_00001_00010_00010_00100_00100_00100_00000010, //7
    0b01110_10001_10001_10001_01110_10001_10001_10001_01110_00000010, //8
    0b01110_10001_10001_10001_01111_00001_00001_10001_01110_00000010, //9

    //A
    0b01110_10001_10001_10001_11111_10001_10001_10001_00000011, //A
    0b00110_01000_00000_01110_10001_10001_10001_11111_10001_10001_10001_00000000, //Á
    0b01100_00010_00000_01110_10001_10001_10001_11111_10001_10001_10001_00000000, //À
    0b00100_01010_00000_01110_10001_10001_10001_11111_10001_10001_10001_00000000, //Â
    0b01010_00000_00000_01110_10001_10001_10001_11111_10001_10001_10001_00000000, //Ä
    0b01111_10100_10100_10110_11100_10100_10100_10111_00000011, //Æ

    //B
    0b11110_10001_10001_11110_10001_10001_10001_11110_00000011, //B

    //C
    0b01110_10001_10000_10000_10000_10000_10001_01110_00000011, //C
    0b01110_10001_10000_10000_10000_10001_01110_00100_00010_01100_10000001, //Ç
    0b00100_01010_00000_01110_10001_10000_10000_10000_10000_10001_01110_00000000, //Ĉ

    //D
    0b11110_10001_10001_10001_10001_10001_10001_11110_00000011, //D

    //E
    0b11111_10000_10000_11110_10000_10000_10000_11111_00000000, //E
    0b00110_01000_00000_11111_10000_10000_11110_10000_10000_10000_11111_00000000, //É
    0b01100_00010_00000_11111_10000_10000_11110_10000_10000_10000_11111_00000000, //È
    0b00100_01010_00000_11111_10000_10000_11110_10000_10000_10000_11111_00000000, //Ê
    0b01010_00000_00000_11111_10000_10000_11110_10000_10000_10000_11111_00000000, //Ë

    //F
    0b11111_10000_10000_11110_10000_10000_10000_10000_00000011, //F

    //G
    0b01110_10001_10001_10000_10111_10001_10001_01110_00000011, //G
    0b00100_01010_00000_01110_10001_10001_10000_10111_10001_10001_01110_00000000, //Ĝ

    //H
    0b10001_10001_10001_11111_10001_10001_10001_10001_00000011, //H
    0b00100_01010_00000_10001_10001_10001_11111_10001_10001_10001_10001_00000000, //Ĥ

    //I
    0b11111_00100_00100_00100_00100_00100_00100_11111_00000011, //I
    0b00110_01000_00000_11111_00100_00100_00100_00100_00100_00100_11111_00000000, //Í
    0b01100_00010_00000_11111_00100_00100_00100_00100_00100_00100_11111_00000000, //Ì
    0b00100_01010_00000_11111_00100_00100_00100_00100_00100_00100_11111_00000000, //Î
    0b01010_00000_00000_11111_00100_00100_00100_00100_00100_00100_11111_00000000, //Ï

    //J
    0b00111_00001_00001_00001_00001_00001_10001_01110_00000011, //J
    0b00010_00101_00000_00111_00001_00001_00001_00001_00001_10001_01110_00000000, //Ĵ

    //K
    0b10001_10010_10100_11000_11000_10100_10010_10001_00000011, //K

    //L
    0b10000_10000_10000_10000_10000_10000_10000_11111_00000011, //L

    //M
    0b10001_11011_11011_10101_10101_10001_10001_10001_00000011, //M

    //N
    0b10001_11001_11001_10101_10011_10011_10001_10001_00000011, //N

    //O
    0b01110_10001_10001_10001_10001_10001_10001_01110_00000011, //O
    0b00110_01000_00000_01110_10001_10001_10001_10001_10001_10001_01110_00000000, //Ó
    0b01100_00010_00000_01110_10001_10001_10001_10001_10001_10001_01110_00000000, //Ò
    0b00100_01010_00000_01110_10001_10001_10001_10001_10001_10001_01110_00000000, //Ô
    0b01010_00000_00000_01110_10001_10001_10001_10001_10001_10001_01110_00000000, //Ö
    0b01111_10100_10100_10110_10100_10100_10100_01111_00000011, //Œ

    //P
    0b11110_10001_10001_10001_11110_10000_10000_10000_00000011, //P

    //Q
    0b01110_10001_10001_10001_10001_11101_10011_01110_00001_01000010, //Q

    //R
    0b11110_10001_10001_10001_11110_10010_10001_10001_00000011, //R

    //S
    0b01110_10001_10000_01100_00010_00001_10001_01110_00000011, //S
    0b00100_01010_00000_01110_10001_10000_01100_00010_00001_10001_01110_00000000, //Ŝ

    //T
    0b11111_00100_00100_00100_00100_00100_00100_00100_00000011, //T

    //U
    0b10001_10001_10001_10001_10001_10001_10001_01110_00000011, //U
    0b00110_01000_00000_10001_10001_10001_10001_10001_10001_10001_01110_00000000, //Ú
    0b01100_00010_00000_10001_10001_10001_10001_10001_10001_10001_01110_00000000, //Ù
    0b00100_01010_00000_10001_10001_10001_10001_10001_10001_10001_01110_00000000, //Û
    0b01010_00000_00000_10001_10001_10001_10001_10001_10001_10001_01110_00000000, //Ü
    0b10001_01110_00000_10001_10001_10001_10001_10001_10001_10001_01110_00000000, //Ŭ

    //V
    0b10001_10001_10001_10001_01010_01010_00100_00100_00000011, //V

    //W
    0b10001_10001_10101_10101_10101_11011_11011_10001_00000011, //W

    //X
    0b10001_10001_01010_00100_00100_01010_10001_10001_00000011, //X

    //Y
    0b10001_10001_01010_01010_00100_00100_00100_00100_00000011, //Y

    //Z
    0b11111_00001_00010_00100_00100_01000_10000_11111_00000011, //Z

    //a
    0b01111_10001_10001_10011_01101_00000110, //a
    0b00110_01000_00000_01111_10001_10001_10011_01101_00000011, //á
    0b01100_00010_00000_01111_10001_10001_10011_01101_00000011, //à
    0b00100_01010_00000_01111_10001_10001_10011_01101_00000011, //â
    0b01010_00000_00000_01111_10001_10001_10011_01101_00000011, //ä
    0b11110_00101_01111_10100_11011_00000110, //æ

    //b
    0b10000_10000_10000_11110_10001_10001_10001_11110_00000011, //b

    //c
    0b01110_10001_10000_10001_01110_00000110, //c
    0b01110_10001_10000_10001_01110_00100_00010_01100_10000011, //ç
    0b00100_01010_00000_01110_10001_10000_10001_01110_00000011, //ĉ

    //d
    0b00001_00001_00001_01111_10001_10001_10001_01111_00000011, //d

    //e
    0b01110_10001_11111_10000_01111_00000110, //e
    0b00110_01000_00000_01110_10001_11111_10000_01111_00000011, //é
    0b01100_00010_00000_01110_10001_11111_10000_01111_00000011, //è
    0b00100_01010_00000_01110_10001_11111_10000_01111_00000011, //ê
    0b01010_00000_00000_01110_10001_11111_10000_01111_00000011, //ë
    
    //f
    0b0011_0100_0100_1111_0100_0100_0100_0100_00010011, //f

    //g
    0b01110_10001_10001_10001_01111_00001_01110_10000100, //g
    0b00100_01010_00000_01110_10001_10001_10001_01111_00001_01110_10000001, //ĝ

    //h
    0b10000_10000_10000_11110_10001_10001_10001_10001_00000011, //h
    0b00100_01010_00000_10000_10000_10000_11110_10001_10001_10001_10001_00000000, //ĥ

    //i
    0b010_000_000_010_010_010_010_010_00100011, //i
    0b011_100_000_010_010_010_010_010_00100011, //í
    0b110_001_000_010_010_010_010_010_00100011, //ì
    0b010_101_000_010_010_010_010_010_00100011, //î
    0b101_000_000_010_010_010_010_010_00100011, //ï

    //j
    0b00010_00000_00000_00010_00010_00010_00010_10010_10010_01100_10000001, //j
    0b00010_00101_00000_00010_00010_00010_00010_10010_10010_01100_10000001, //ĵ

    //k
    0b1000_1000_1000_1001_1010_1100_1010_1001_00010011, //k

    //l
    0b110_010_010_010_010_010_010_010_00100011, //l

    //m
    0b11110_10101_10101_10101_10101_00000110, //m
    
    //n
    0b11100_10010_10010_10010_10010_00000110, //n

    //o
    0b01110_10001_10001_10001_01110_00000110, //o
    0b00110_01000_00000_01110_10001_10001_10001_01110_00000011, //ó
    0b01100_00010_00000_01110_10001_10001_10001_01110_00000011, //ò
    0b00100_01010_00000_01110_10001_10001_10001_01110_00000011, //ô
    0b01010_00000_00000_01110_10001_10001_10001_01110_00000011, //ö
    0b01110_10101_10111_10100_01111_00000110, //œ

    //p
    0b11110_10001_10001_10001_11110_10000_10000_10000100, //p

    //q
    0b01111_10001_10001_10001_01111_00001_00001_10000100, //q

    //r
    0b1011_1100_1000_1000_1000_00010110, //r

    //s
    0b11110_10000_01110_00010_11110_00000110, //s
    0b0010_0101_0000_1111_1000_0111_0001_1111_00010011, //s

    //t
    0b01000_01000_11110_01000_01000_01000_01110_00000100, //t

    //u
    0b10010_10010_10010_10010_01101_00000110, //u
    0b00110_01000_00000_10010_10010_10010_10010_01101_00000011, //ú
    0b01100_00010_00000_10010_10010_10010_10010_01101_00000011, //ù
    0b00100_01010_00000_10010_10010_10010_10010_01101_00000011, //û
    0b10010_00000_00000_10010_10010_10010_10010_01101_00000011, //ü
    0b10010_01100_00000_10010_10010_10010_10010_01101_00000011, //ŭ

    //v
    0b10001_10001_01010_01010_00100_00000110, //v

    //w
    0b10101_10101_10101_10101_01010_00000110, //w

    //x
    0b10001_01010_00100_01010_10001_00000110, //x

    //y
    0b10001_10001_10001_10001_01111_00001_11110_10000100, //y

    //z
    0b11111_00010_00100_01000_11111_00000110, //z

    //Ponctuation et symbôles
    0b11_11_01_10_00_00_00_00_00_00110000, //’
    0b11_11_00111001, //.
    0b10101_00001010, //…
    0b11_11_01_10_10110111, //,
    0b11_11_00_00_11_11_01_10_10110011, //;
    0b11_11_00_00_11_11_00_00110100, //:
    0b010_010_010_010_010_010_010_000_010_010_00100001, //!
    0b01110_10001_10001_10001_00010_00100_00100_00000_00100_00100_00000001, //?
    0b00100_00100_11111_00100_00100_00000_00000_00000100, //+
    0b11111_00000_00000_00000_00000_00000110, //-
    0b10001_01010_00100_01010_10001_00000_00000101, //*
    0b10000_10000_01000_01000_00100_00100_00010_00010_00001_00001_00000001, // /
    0b11111_00000_00000_11111_00000_00000_00000101, // =
    0b00010_00010_11111_00100_00100_11111_01000_01000_00000011, // ≠
    0b01_10_10_10_10_10_10_10_10_10_01_01110000, //(
    0b10_01_01_01_01_01_01_01_01_01_10_01110000, //)
    0b11_10_10_10_10_10_10_10_10_10_11_01110000, //[
    0b11_01_01_01_01_01_01_01_01_01_11_01110000, //]
    0b00101_01010_10100_01010_00101_00000_00000101, //«
    0b10100_01010_00101_01010_10100_00000_00000101, //»
    0b0110_1001_1001_0110_0000_0000_0000_0000_0000_0000_00010001, //°
    0b01001_10101_10110_01110_00100_00100_01110_01101_10101_10010_00000001, //%
];

private dchar[] _symbols = [
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    'A',
    'Á',
    'À',
    'Â',
    'Ä',
    'Æ',
    'B',
    'C',
    'Ç',
    'Ĉ',
    'D',
    'E',
    'É',
    'È',
    'Ê',
    'Ë',
    'F',
    'G',
    'Ĝ',
    'H',
    'Ĥ',
    'I',
    'Í',
    'Ì',
    'Î',
    'Ï',
    'J',
    'Ĵ',
    'K',
    'L',
    'M',
    'N',
    'O',
    'Ó',
    'Ò',
    'Ô',
    'Ö',
    'Œ',
    'P',
    'Q',
    'R',
    'S',
    'Ŝ',
    'T',
    'U',
    'Ú',
    'Ù',
    'Û',
    'Ü',
    'Ŭ',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    'a',
    'á',
    'à',
    'â',
    'ä',
    'æ',
    'b',
    'c',
    'ç',
    'ĉ',
    'd',
    'e',
    'é',
    'è',
    'ê',
    'ë',
    'f',
    'g',
    'ĝ',
    'h',
    'ĥ',
    'i',
    'í',
    'ì',
    'î',
    'ï',
    'j',
    'ĵ',
    'k',
    'l',
    'm',
    'n',
    'o',
    'ó',
    'ò',
    'ô',
    'ö',
    'œ',
    'p',
    'q',
    'r',
    's',
    'ŝ',
    't',
    'u',
    'ú',
    'ù',
    'û',
    'ü',
    'ŭ',
    'v',
    'w',
    'x',
    'y',
    'z',
    '’',
    '.',
    '…',
    ',',
    ';',
    ':',
    '!',
    '?',
    '+',
    '-',
    '*',
    '/',
    '=',
    '≠',
    '(',
    ')',
    '[',
    ']',
    '«',
    '»',
    '°',
    '%',
];

private size_t[dchar] _table;

void initFont() {
    for(size_t i; i < _symbols.length; ++i) {
        _table[_symbols[i]] = i;
    }
}

ulong getGlyphData(dchar ch) {
    size_t* p = ch in _table;
    return p ? _font[*p] : 0;
}
